# Steam Hour Booster - Multi Account Edition
# Environment Configuration Template

# ======================
# Application Settings
# ======================

# Server Configuration
NODE_ENV=production
PORT=3000
LOG_LEVEL=info

# ======================
# Database Configuration
# ======================

# PostgreSQL Database Settings
DB_HOST=postgres
DB_PORT=5432
DB_NAME=steam_booster
DB_USER=steam_user
DB_PASSWORD=steam_password

# Database Connection String (alternative to individual settings)
# DATABASE_URL=postgresql://steam_user:steam_password@postgres:5432/steam_booster

# ======================
# Security Settings
# ======================

# Session Configuration (if implementing sessions)
# SESSION_SECRET=your-super-secret-session-key-here

# JWT Configuration (if implementing JWT auth)
# JWT_SECRET=your-jwt-secret-key-here
# JWT_EXPIRES_IN=24h

# ======================
# Logging Configuration
# ======================

# Log Level Options: error, warn, info, http, verbose, debug, silly
LOG_LEVEL=info

# Log Retention (days)
LOG_RETENTION_DAYS=14
ERROR_LOG_RETENTION_DAYS=30

# Log File Size Limits
LOG_MAX_SIZE=20m
LOG_MAX_FILES=14d

# ======================
# Steam Configuration
# ======================

# Steam API Settings (if implementing Steam API features)
# STEAM_API_KEY=your-steam-api-key-here

# Steam Client Configuration
STEAM_RECONNECT_ATTEMPTS=3
STEAM_RECONNECT_DELAY=5000

# ======================
# Application Features
# ======================

# Multi-Account Limits
MAX_ACCOUNTS_PER_USER=10
MAX_CONCURRENT_SESSIONS=5

# Boosting Configuration
MAX_GAMES_PER_SESSION=10
DEFAULT_BOOST_GAMES=730,440,570

# Session Timeouts (milliseconds)
SESSION_TIMEOUT=3600000
IDLE_TIMEOUT=1800000

# ======================
# Development Settings
# ======================

# Development Mode
# NODE_ENV=development
# DEBUG=steam-booster:*

# Hot Reload
# CHOKIDAR_USEPOLLING=true

# ======================
# Docker Configuration
# ======================

# Docker Compose Overrides
# COMPOSE_PROJECT_NAME=steam-booster
# COMPOSE_FILE=docker-compose.yml:docker-compose.override.yml

# Container Resource Limits
CONTAINER_MEMORY_LIMIT=1024m
CONTAINER_CPU_LIMIT=1.0

# ======================
# Monitoring & Health
# ======================

# Health Check Configuration
HEALTH_CHECK_INTERVAL=30s
HEALTH_CHECK_TIMEOUT=10s
HEALTH_CHECK_RETRIES=3

# Metrics and Monitoring
# ENABLE_METRICS=true
# METRICS_PORT=9090

# ======================
# Backup Configuration
# ======================

# Database Backup Settings
# BACKUP_SCHEDULE=0 2 * * *
# BACKUP_RETENTION_DAYS=30
# BACKUP_COMPRESSION=true

# ======================
# Production Overrides
# ======================

# For production deployment, override these values:
# - Change default passwords
# - Use environment-specific database hosts
# - Enable HTTPS/SSL
# - Configure proper log levels
# - Set up monitoring and alerting

# Example Production Settings:
# NODE_ENV=production
# LOG_LEVEL=warn
# DB_HOST=your-production-db-host
# DB_PASSWORD=your-secure-production-password
# SESSION_SECRET=your-production-session-secret
